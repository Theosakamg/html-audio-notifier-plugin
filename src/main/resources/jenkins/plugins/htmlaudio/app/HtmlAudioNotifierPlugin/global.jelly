<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
    xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  
    <f:section title="HTML audio notifications">
    
      <f:entry title="Enabled by default">
          <f:checkbox name="htmlAudioEnabledByDefault" checked="${descriptor.enabledByDefault}" />
      </f:entry>
      
      <f:entry title="Enable long-polling">
          <f:checkbox name="htmlAudioLongPollingEnabled" checked="${descriptor.longPollingEnabled}" />
      </f:entry>
      
      <f:entry title="Success sound URL" help="/plugin/html-audio-notifier/help-globalConfig-sounds.html">
          <f:textbox id="htmlAudioSuccessSoundUrl" name="htmlAudioSuccessSoundUrl"
            value="${descriptor.successSoundUrl}" />
          <input type="button" value="Test" onClick="testSound('htmlAudioSuccessSoundUrl')" />
      </f:entry>
      
      <f:entry title="Success-after-failure sound URL" help="/plugin/html-audio-notifier/help-globalConfig-sounds.html">
          <f:textbox id="htmlAudioSuccessAfterFailureSoundUrl" name="htmlAudioSuccessAfterFailureSoundUrl"
            value="${descriptor.successAfterFailureSoundUrl}" />
          <input type="button" value="Test" onClick="testSound('htmlAudioSuccessAfterFailureSoundUrl')" />
      </f:entry>
      
      <f:entry title="Failure sound URL" help="/plugin/html-audio-notifier/help-globalConfig-sounds.html">
          <f:textbox id="htmlAudioFailureSoundUrl" name="htmlAudioFailureSoundUrl"
            value="${descriptor.failureSoundUrl}" />
          <input type="button" value="Test" onClick="testSound('htmlAudioFailureSoundUrl')" />
      </f:entry>
      
      <f:entry title="Themes">
          <a href="#" onclick="superMarioMode(); return false;" title="Maaaario">
              <img src="${request.contextPath}/plugin/html-audio-notifier/images/mario.png" />
          </a>
      </f:entry>
      
      <script type="text/javascript">
          testPlayer = new AudioPlayer();
          themePlayer = new AudioPlayer();
          
          testPlayer.player.addEventListener('ended', function() {
              alert('Completed..');
          }, false);
          
          testPlayer.player.addEventListener('error', function() {
              alert('Failed.\nMake sure that the URL is correct or try a different file-format..');
          }, false);
          
          function testSound(soundId) {
              var url = document.getElementById(soundId).value;
              testPlayer.enqueue(toAbsoluteUrl('${app.rootUrlFromRequest}', url));
          }
          
          function superMarioMode() {
              setTheme('http://themushroomkingdom.net/sounds/wav/smb/smb_kick.wav',
                'http://themushroomkingdom.net/sounds/wav/smb/smb_powerup.wav',
                'http://themushroomkingdom.net/sounds/wav/smb/smb_mariodie.wav')
              themePlayer.enqueue('http://themushroomkingdom.net/sounds/wav/sm64_memario.wav')
          }
          
          function setTheme(success, successAfterFailure, failure) {
              document.getElementById('htmlAudioSuccessSoundUrl').value = success
              document.getElementById('htmlAudioSuccessAfterFailureSoundUrl').value = successAfterFailure
              document.getElementById('htmlAudioFailureSoundUrl').value = failure
          }
      </script>
    </f:section>
</j:jelly>
